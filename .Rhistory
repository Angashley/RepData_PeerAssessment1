rm()
packageVersion("swirl")
library("swirl")
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
windows()
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 2)
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v=median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg  <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "read")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, pollution$region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude~pm25))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline (h =12, lwd = 2, lty = 2)
par(mfrow = c (1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude,west$pm25,main = "west")
plot(west$latitude,west$pm25,main = "West")
plot(east$latitude,east$pm25,main = "East")
?Devices
dataset, plot
plot(dataset, eruptions, waiting)
plot(eruptions, waiting)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
getcd()
getwd()
install.packages ("xtable")
setwd("C:/Users/Xiaoqing/Desktop/CourseraR learning/Reproducible Research/Week2/RepData_PeerAssessment1")
library(dplyr)
library(ggplot2)
library(knitr)
if(!(file.exists("activity.csv"))) {unzip("activity.zip", "activity.csv")}
activity <- read.csv("activity.csv")
activity <- tbl_df(activity)
activity$date <- as.Date(activity$date, format ="%Y-%m-%d")
dataImp <- activity
for (i in stepsAverage$interval) {
dataImp[dataImp$interval == i
& is.na(dataImp$steps), ]$steps <-
stepsAverage$stepsAverage[stepsAverage$interval == i]
}
Activitycomplete <- activity[complete.cases(activity),]
stepsAverage <- Activitycomplete %>%
group_by(interval) %>%
summarise(stepsAverage = mean(steps))
dataImp <- activity
for (i in stepsAverage$interval) {
dataImp[dataImp$interval == i
& is.na(dataImp$steps), ]$steps <-
stepsAverage$stepsAverage[stepsAverage$interval == i]
}
dataImp$day <- weekdays(dataImp$date)
for (i in 1:nrow(dataImp)) {
if (!dataImp[i,]$day %in% c("Saturday","Sunday"))
{
dataImp[i,]$day <- "weekday"
}
else {
dataImp[i,]$day <- "weekend"
}
}
dataImp$day <- as.factor(dataImp$day)
stepsMean <- dataImp %>%
group_by(interval,day) %>%
summarise(steps = mean(steps))
str(stepsMean)
head(stepsMean)
ggplot(stepsMean,aes(x = interval, y = steps)) +
geom_line(color = "blue") +
facet_grid(interval~day)+
ggtitle("Daily steps") +
labels(xlab = "", ylab = "Number of steps")
ggplot(stepsMean,aes(x = interval, y = steps)) +
geom_line(color = "blue") +
facet_grid(day~.)+
ggtitle("Number of steps taken per day") +
ylab("Number of steps")
ggplot(stepsMean,aes(x = interval, y = steps)) +
geom_line(color = "blue") +
facet_grid(day~.) +
labs(x = "Interval", y = "Number of steps") +
theme(strip.text=element_text(vjust=-10))
xyplot(steps ~ interval | day, data=stepsMean, type="l", grid=T, layout=c(1,2), ylab="Number of steps", xlab="Interval", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
library(lattce)
library(lattice)
xyplot(steps ~ interval | day, data=stepsMean, type="l", grid=T, layout=c(1,2), ylab="Number of steps", xlab="Interval", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
xyplot(steps ~ interval | day, data = stepsMean,
type="l",
ylab="Number of steps",
xlab="Interval",
main="Average steps - Weekend versus Weekday")
xyplot(steps ~ interval | day, data = stepsMean,
type="l", layout = c(1,2),
ylab="Number of steps",
xlab="Interval",
main="Average steps - Weekend vs Weekday")
xyplot(steps ~ interval | day, data = stepsMean,
type="l", layout = c(1,2),
ylab="Number of steps",
xlab="Interval",
main="A comparison between weekends and weekdays activity"
)
summary(stepsMean$interval)
2355/5
2355/60
2360/60
25*60
24*60
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
500/60
835/60
2355/60
library(knitr)
knit2html()
knit2html("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
